{"ast":null,"code":"var _jsxFileName = \"/Users/drashti/Documents/Drashti workshop/assessment---react-photo-wall/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // This URL can be combined with an photo id to fetch an photo.\n\nconst PHOTO_URL = photoId => \"https://picsum.photos/id/\".concat(photoId, \"/200/200\"); // This URL can be used to get an array of objects that contain information\n// about various photos.\n\n\nconst PHOTO_LIST_URL = \"https://picsum.photos/list\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photos: []\n    };\n  }\n\n  // 2. Declare a life cycle method\n  // This life cycle method should:\n  //  - will be called after the component is initially rendered\n  // - will fetch an array of photos\n  // - will add that array of photos to state once received\n  componentDidMount() {\n    fetch(PHOTO_LIST_URL).then(res => res.json()).then(photos => {\n      this.setState({\n        photos\n      });\n    });\n  }\n\n  render() {\n    const _this$state$photos = this.state.photos,\n          photos = _this$state$photos === void 0 ? [] : _this$state$photos;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Photo Wall\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Start by reading App.jsx and completing the numbered steps. Afterward, delete this paragraph. Then, open up App.css and complete the instructions there.\")), React.createElement(\"div\", {\n      className: \"collage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, photos.map(photo => React.createElement(\"img\", {\n      alt: photo.filename,\n      key: photo.id,\n      src: PHOTO_URL(photo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/drashti/Documents/Drashti workshop/assessment---react-photo-wall/src/App.js"],"names":["React","Component","PHOTO_URL","photoId","PHOTO_LIST_URL","App","state","photos","componentDidMount","fetch","then","res","json","setState","render","map","photo","filename","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,SAAS,GAAGC,OAAO,uCAAgCA,OAAhC,aAAzB,C,CACA;AACA;;;AACA,MAAMC,cAAc,GAAG,4BAAvB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BK,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAE;AADF,KAFkB;AAAA;;AAO1B;AACA;AACA;AACA;AACA;AACFC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAACL,cAAD,CAAL,CACGM,IADH,CACQC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADb,EAEGF,IAFH,CAEQH,MAAM,IAAE;AACZ,WAAKM,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KAJH;AAKD;;AAICO,EAAAA,MAAM,GAAG;AAAA,+BACiB,KAAKR,KADtB,CACCC,MADD;AAAA,UACCA,MADD,mCACU,EADV;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kKAFF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,MAAM,CAACQ,GAAP,CAAWC,KAAK,IACf;AACE,MAAA,GAAG,EAAEA,KAAK,CAACC,QADb;AAEE,MAAA,GAAG,EAAED,KAAK,CAACE,EAFb;AAGE,MAAA,GAAG,EAAEhB,SAAS,CAACc,KAAK,CAACE,EAAP,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CATF,CADF;AAwBD;;AAhDyB;;AAmD5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\n// This URL can be combined with an photo id to fetch an photo.\nconst PHOTO_URL = photoId => `https://picsum.photos/id/${photoId}/200/200`;\n// This URL can be used to get an array of objects that contain information\n// about various photos.\nconst PHOTO_LIST_URL = \"https://picsum.photos/list\";\n\nclass App extends Component {\n  // 1. Declare a state object that will be used to track an array of photos\n  state = {\n    photos: [],\n    \n  };\n\n  // 2. Declare a life cycle method\n  // This life cycle method should:\n  //  - will be called after the component is initially rendered\n  // - will fetch an array of photos\n  // - will add that array of photos to state once received\ncomponentDidMount(){\n  fetch(PHOTO_LIST_URL)\n    .then(res=>res.json())\n    .then(photos=>{\n      this.setState({ photos })\n    });\n}\n\n\n\n  render() {\n    const { photos = [] } = this.state;\n    return (\n      <React.Fragment>\n        <header>\n          <h1>Photo Wall</h1>\n          <p>\n            Start by reading App.jsx and completing the numbered steps.\n            Afterward, delete this paragraph. Then, open up App.css and complete\n            the instructions there.\n          </p>\n        </header>\n        <div className=\"collage\">\n          {/* We use map here because Array.prototype.map is an expression,\n           * and for loops are not. You'll learn more about this soon!\n           */}\n          {photos.map(photo => (\n            <img\n              alt={photo.filename}\n              key={photo.id}\n              src={PHOTO_URL(photo.id)}\n            />\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}